= Installation Manual =

== Dependencies ==

 * Python 2.5
 * EasyInstall

== Install Instructions ==

Clone the egg from the source mercurial repository, or download a
previously zipped copy of the repo and unzip it.

Run the following commands:

    cd dir-containing-dist/
    python setup.py egg_info
    make install

This will install the following:

  - The required folders from the unzipped dist directory will be
    installed in /var/local/course/
  - The sqlite db to be used by the course package will be copied over
    from /var/tmp/math0010.sqlite
  - The course-egg will be installed as a py egg in
    /usr/local/lib/python2.5/site-packages
  - Scripts related to the course utility would be installed in
    /usr/local/bin

A few files will be created in the unzipped distribution dir, including
'installed-files.log' do not remove this file as it will be needed if
you plan to uninstall this package. This file contains the paths to all
the files that were installed via easy_install script.

To change the destination directories or the default src location of the
sqlite database you will have to modify these paths in the Makefile
found in the root of the unzipped destination directory. Same directory
where make install was run.

=== How to use the installed directories ===

In the destination directory you will find the following directories.
Along with each directory is a description of the files located within.

 templates/     - The templates rendered by the course application.
                  .mako files directly in this directory include a base
                  template for all files along with two error templates.
    math0010/   - The templates that render the specific course pages.

 messages/       - All files here are to be concatenated in alphabetical
                  order and displayed to the course students at the top
                  of there page.
 downloads/      - All files listed here are downloadable by logged in
                  students and will be listed in their login page.
 public/         - This is the applications document root. Directories
                  created here can be accessed without login. However,
                  make sure to not create directory names that map ontop
                  of other urls in the system as these will take
                  precedence and mask the standard ones.
    graphics/   - A directory containing some graphics used by the
                  course application.

 run/           - for cache and session stuff 

== Un-Install Instructions ==

If you have not deleted 'installed-files.log' you will be able to
uninstall the course package. To uninstall the dist egg and all files
listed in 'installed-files.log' do the following:
    
    cd dir-containing-dist/
    make uninstall

If you want to purge all files relating to course including the ones
installed in /var/local/course/ do the following instead.

    cd dir-containing-dist/
    make uninstall

== Running the application ==

To start the application you would need to do the following. The
destination directory referred to here would map to /var/local/course by
default, unless the default Makefile has been changed.

    cd destination-dir
    paster serve production.ini

This will start the application with the default options. To modify the
options relative config options need to be modified in the
production.ini. The following are the options that may likely need to be
modified if needed.

[server:main]
# with knowledge of pylons this would indicate the serving method and 
# can be changed to allow different access method to course
use = egg:Paste#http 
# The host on which this application is served. When set to localhost
# only incoming connections from localhost will be accepted
host = localhost
# The port number on which this application is listening
port = 5000

== Debian init.d ==

Along with the package in the unzipped distribution there should be
included a file named 'course-init.sh'. This is an init.d script that
can be used to automatically start|stop|restart the course application.
The defaults switch to a user:group -> course:course prior to starting
the application. Therefore such a system user that is able to read the
destination directory (default /var/local/course (path explicit in
script)) needs to be existent. This should be changed for other setups
of this package. To install the course-init.sh on debian machines run
the following commands as root or user with sufficient privileges to
modify /etc/init.d

    cd distribution-dir
    cp course-init.sh /etc/init.d/course
    update-rc.d course install

If you want to remove the script from startup
    
    update-rc.d course remove
    # optionally run
    rm /etc/init.d/course

== Deploying Behind Apache2 ==

To deploy behind apache2 you need to install some modules by typing the
following commands:
    sudo a2enmod proxy
    sudo a2enmod proxy_http
    # optionally run (requirement explained in config section bellow)
    sudo a2enmod rewrite

Configuring apache requires modifications to the relative site config
that will serve the application. Usually in /etc/apache2/sites-available

Add the following configuration:    
    # Proxy General Config
    ProxyPreserveHost On
    <Proxy *>
        Order deny,allow
        Allow from all
    </Proxy>

    <Location /mycourse/>
        ProxyPass http://localhost:5000/
        ProxyPassReverse http://localhost:5000/
    </Location>
    
    # If you had installed the rewrite module above then this config
    # would be triggered. This allows the user to not have to place a
    # trailing slash at the end of the url to find your application
    <IfModule rewrite_module>
        RewriteEngine On
        # the following lines are used to secure from possible trace 
        # scripting attacks
        RewriteCond %{REQUEST_METHOD} ^TRACE
        RewriteRule .* - [F]
        # This rule allows access to mycourse without a trailing slash
        RewriteRule ^/mycourse$ /mycourse/ [R]
    </IfModule>

Change the production.ini, installed by default in /var/local/course to
include the name mycourse in the [filter:proxy-prefix] prefix entry. And
the port entry should map to 5000 under the [server:main] section. Feel
free to change these values correlating the changes both to the
production.ini file and the apache-site-config file.

== Use with mod_wsgi ==

Install the most recent mod_wsgi for Apache2

The apache config:

# with mod_wsgi

# production site

# Option 1

    WSGIDaemonProcess batman.cs.dal.ca user=course group=course
    WSGIProcessGroup batman.cs.dal.ca
    WSGIScriptAlias /math0010 /var/local/course/wsgi-starter.py

## Option 2
#    WSGIDaemonProcess math0010 user=course group=course
#    SetEnv PROCESS_GROUP default
#    WSGIProcessGroup %{ENV:PROCESS_GROUP}
#    Alias /math0010 /var/local/course/math0010.py
#    <Directory /var/local/course>
#        Options ExecCGI
#        Order deny,allow
#        # Allow from 127.0.0.0/255.0.0.0 ::1/128
#        Allow from all
#        AddHandler wsgi-script .wsgi
#        WSGIRestrictProcess math0010
#        SetEnv PROCESS_GROUP math0010
#    </Directory>

# testing site

## Option 1 to use w/option 1 above
#    wsgiscriptalias /testcourse /var/tmp/course/wsgi-starter.py
#
## Option 2 to use w/option 2 above
#    Alias /testcourse /var/local/course/math0010.py
#    <Directory /var/local/course>
#        Options ExecCGI
#        Order deny,allow
#        # Allow from 127.0.0.0/255.0.0.0 ::1/128
#        Allow from all
#        AddHandler wsgi-script .wsgi
#        WSGIRestrictProcess math0010
#        SetEnv PROCESS_GROUP math0010
#    </Directory>

The /var/local/course/run for cache and session stuff should be owned by
course:course 
